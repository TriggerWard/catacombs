const externalContracts = {
  11155111: {
    OOV3: {
      address: "0xFd9e2642a170aDD10F53Ee14a93FcF2F31924944",
      abi: [
        {
          inputs: [
            { internalType: "contract FinderInterface", name: "_finder", type: "address" },
            { internalType: "contract IERC20", name: "_defaultCurrency", type: "address" },
            { internalType: "uint64", name: "_defaultLiveness", type: "uint64" },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "contract IERC20", name: "defaultCurrency", type: "address" },
            { indexed: false, internalType: "uint64", name: "defaultLiveness", type: "uint64" },
            { indexed: false, internalType: "uint256", name: "burnedBondPercentage", type: "uint256" },
          ],
          name: "AdminPropertiesSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { indexed: true, internalType: "address", name: "caller", type: "address" },
            { indexed: true, internalType: "address", name: "disputer", type: "address" },
          ],
          name: "AssertionDisputed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { indexed: false, internalType: "bytes32", name: "domainId", type: "bytes32" },
            { indexed: false, internalType: "bytes", name: "claim", type: "bytes" },
            { indexed: true, internalType: "address", name: "asserter", type: "address" },
            { indexed: false, internalType: "address", name: "callbackRecipient", type: "address" },
            { indexed: false, internalType: "address", name: "escalationManager", type: "address" },
            { indexed: false, internalType: "address", name: "caller", type: "address" },
            { indexed: false, internalType: "uint64", name: "expirationTime", type: "uint64" },
            { indexed: false, internalType: "contract IERC20", name: "currency", type: "address" },
            { indexed: false, internalType: "uint256", name: "bond", type: "uint256" },
            { indexed: true, internalType: "bytes32", name: "identifier", type: "bytes32" },
          ],
          name: "AssertionMade",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { indexed: true, internalType: "address", name: "bondRecipient", type: "address" },
            { indexed: false, internalType: "bool", name: "disputed", type: "bool" },
            { indexed: false, internalType: "bool", name: "settlementResolution", type: "bool" },
            { indexed: false, internalType: "address", name: "settleCaller", type: "address" },
          ],
          name: "AssertionSettled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [
            { internalType: "bytes", name: "claim", type: "bytes" },
            { internalType: "address", name: "asserter", type: "address" },
            { internalType: "address", name: "callbackRecipient", type: "address" },
            { internalType: "address", name: "escalationManager", type: "address" },
            { internalType: "uint64", name: "liveness", type: "uint64" },
            { internalType: "contract IERC20", name: "currency", type: "address" },
            { internalType: "uint256", name: "bond", type: "uint256" },
            { internalType: "bytes32", name: "identifier", type: "bytes32" },
            { internalType: "bytes32", name: "domainId", type: "bytes32" },
          ],
          name: "assertTruth",
          outputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes", name: "claim", type: "bytes" },
            { internalType: "address", name: "asserter", type: "address" },
          ],
          name: "assertTruthWithDefaults",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          name: "assertions",
          outputs: [
            {
              components: [
                { internalType: "bool", name: "arbitrateViaEscalationManager", type: "bool" },
                { internalType: "bool", name: "discardOracle", type: "bool" },
                { internalType: "bool", name: "validateDisputers", type: "bool" },
                { internalType: "address", name: "assertingCaller", type: "address" },
                { internalType: "address", name: "escalationManager", type: "address" },
              ],
              internalType: "struct OptimisticOracleV3Interface.EscalationManagerSettings",
              name: "escalationManagerSettings",
              type: "tuple",
            },
            { internalType: "address", name: "asserter", type: "address" },
            { internalType: "uint64", name: "assertionTime", type: "uint64" },
            { internalType: "bool", name: "settled", type: "bool" },
            { internalType: "contract IERC20", name: "currency", type: "address" },
            { internalType: "uint64", name: "expirationTime", type: "uint64" },
            { internalType: "bool", name: "settlementResolution", type: "bool" },
            { internalType: "bytes32", name: "domainId", type: "bytes32" },
            { internalType: "bytes32", name: "identifier", type: "bytes32" },
            { internalType: "uint256", name: "bond", type: "uint256" },
            { internalType: "address", name: "callbackRecipient", type: "address" },
            { internalType: "address", name: "disputer", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "burnedBondPercentage",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "", type: "address" }],
          name: "cachedCurrencies",
          outputs: [
            { internalType: "bool", name: "isWhitelisted", type: "bool" },
            { internalType: "uint256", name: "finalFee", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          name: "cachedIdentifiers",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "cachedOracle",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "defaultCurrency",
          outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "defaultIdentifier",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "defaultLiveness",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { internalType: "address", name: "disputer", type: "address" },
          ],
          name: "disputeAssertion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "finder",
          outputs: [{ internalType: "contract FinderInterface", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          name: "getAssertion",
          outputs: [
            {
              components: [
                {
                  components: [
                    { internalType: "bool", name: "arbitrateViaEscalationManager", type: "bool" },
                    { internalType: "bool", name: "discardOracle", type: "bool" },
                    { internalType: "bool", name: "validateDisputers", type: "bool" },
                    { internalType: "address", name: "assertingCaller", type: "address" },
                    { internalType: "address", name: "escalationManager", type: "address" },
                  ],
                  internalType: "struct OptimisticOracleV3Interface.EscalationManagerSettings",
                  name: "escalationManagerSettings",
                  type: "tuple",
                },
                { internalType: "address", name: "asserter", type: "address" },
                { internalType: "uint64", name: "assertionTime", type: "uint64" },
                { internalType: "bool", name: "settled", type: "bool" },
                { internalType: "contract IERC20", name: "currency", type: "address" },
                { internalType: "uint64", name: "expirationTime", type: "uint64" },
                { internalType: "bool", name: "settlementResolution", type: "bool" },
                { internalType: "bytes32", name: "domainId", type: "bytes32" },
                { internalType: "bytes32", name: "identifier", type: "bytes32" },
                { internalType: "uint256", name: "bond", type: "uint256" },
                { internalType: "address", name: "callbackRecipient", type: "address" },
                { internalType: "address", name: "disputer", type: "address" },
              ],
              internalType: "struct OptimisticOracleV3Interface.Assertion",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          name: "getAssertionResult",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentTime",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "currency", type: "address" }],
          name: "getMinimumBond",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes[]", name: "data", type: "bytes[]" }],
          name: "multicall",
          outputs: [{ internalType: "bytes[]", name: "results", type: "bytes[]" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "numericalTrue",
          outputs: [{ internalType: "int256", name: "", type: "int256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "renounceOwnership", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [
            { internalType: "contract IERC20", name: "_defaultCurrency", type: "address" },
            { internalType: "uint64", name: "_defaultLiveness", type: "uint64" },
            { internalType: "uint256", name: "_burnedBondPercentage", type: "uint256" },
          ],
          name: "setAdminProperties",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          name: "settleAndGetAssertionResult",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          name: "settleAssertion",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          name: "stampAssertion",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "identifier", type: "bytes32" },
            { internalType: "address", name: "currency", type: "address" },
          ],
          name: "syncUmaParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
    USDC: {
      address: "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238",
      abi: [
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "owner", type: "address" },
            { indexed: true, internalType: "address", name: "spender", type: "address" },
            { indexed: false, internalType: "uint256", name: "value", type: "uint256" },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "authorizer", type: "address" },
            { indexed: true, internalType: "bytes32", name: "nonce", type: "bytes32" },
          ],
          name: "AuthorizationCanceled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "authorizer", type: "address" },
            { indexed: true, internalType: "bytes32", name: "nonce", type: "bytes32" },
          ],
          name: "AuthorizationUsed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "_account", type: "address" }],
          name: "Blacklisted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "newBlacklister", type: "address" }],
          name: "BlacklisterChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "burner", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "Burn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "newMasterMinter", type: "address" }],
          name: "MasterMinterChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "minter", type: "address" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "Mint",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "minter", type: "address" },
            { indexed: false, internalType: "uint256", name: "minterAllowedAmount", type: "uint256" },
          ],
          name: "MinterConfigured",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "oldMinter", type: "address" }],
          name: "MinterRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "address", name: "previousOwner", type: "address" },
            { indexed: false, internalType: "address", name: "newOwner", type: "address" },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        { anonymous: false, inputs: [], name: "Pause", type: "event" },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "newAddress", type: "address" }],
          name: "PauserChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "newRescuer", type: "address" }],
          name: "RescuerChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "from", type: "address" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
            { indexed: false, internalType: "uint256", name: "value", type: "uint256" },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "_account", type: "address" }],
          name: "UnBlacklisted",
          type: "event",
        },
        { anonymous: false, inputs: [], name: "Unpause", type: "event" },
        {
          inputs: [],
          name: "CANCEL_AUTHORIZATION_TYPEHASH",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "DOMAIN_SEPARATOR",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "PERMIT_TYPEHASH",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "RECEIVE_WITH_AUTHORIZATION_TYPEHASH",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
          ],
          name: "allowance",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          name: "approve",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "authorizer", type: "address" },
            { internalType: "bytes32", name: "nonce", type: "bytes32" },
          ],
          name: "authorizationState",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "account", type: "address" }],
          name: "balanceOf",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_account", type: "address" }],
          name: "blacklist",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "blacklister",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "_amount", type: "uint256" }],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "authorizer", type: "address" },
            { internalType: "bytes32", name: "nonce", type: "bytes32" },
            { internalType: "uint8", name: "v", type: "uint8" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "cancelAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "authorizer", type: "address" },
            { internalType: "bytes32", name: "nonce", type: "bytes32" },
            { internalType: "bytes", name: "signature", type: "bytes" },
          ],
          name: "cancelAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "minter", type: "address" },
            { internalType: "uint256", name: "minterAllowedAmount", type: "uint256" },
          ],
          name: "configureMinter",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "currency",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "decrement", type: "uint256" },
          ],
          name: "decreaseAllowance",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "increment", type: "uint256" },
          ],
          name: "increaseAllowance",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "string", name: "tokenName", type: "string" },
            { internalType: "string", name: "tokenSymbol", type: "string" },
            { internalType: "string", name: "tokenCurrency", type: "string" },
            { internalType: "uint8", name: "tokenDecimals", type: "uint8" },
            { internalType: "address", name: "newMasterMinter", type: "address" },
            { internalType: "address", name: "newPauser", type: "address" },
            { internalType: "address", name: "newBlacklister", type: "address" },
            { internalType: "address", name: "newOwner", type: "address" },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "string", name: "newName", type: "string" }],
          name: "initializeV2",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "lostAndFound", type: "address" }],
          name: "initializeV2_1",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address[]", name: "accountsToBlacklist", type: "address[]" },
            { internalType: "string", name: "newSymbol", type: "string" },
          ],
          name: "initializeV2_2",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_account", type: "address" }],
          name: "isBlacklisted",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "account", type: "address" }],
          name: "isMinter",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "masterMinter",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "_to", type: "address" },
            { internalType: "uint256", name: "_amount", type: "uint256" },
          ],
          name: "mint",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "minter", type: "address" }],
          name: "minterAllowance",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "owner", type: "address" }],
          name: "nonces",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        { inputs: [], name: "pause", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [],
          name: "paused",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "pauser",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "bytes", name: "signature", type: "bytes" },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "uint8", name: "v", type: "uint8" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "permit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "validAfter", type: "uint256" },
            { internalType: "uint256", name: "validBefore", type: "uint256" },
            { internalType: "bytes32", name: "nonce", type: "bytes32" },
            { internalType: "bytes", name: "signature", type: "bytes" },
          ],
          name: "receiveWithAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "validAfter", type: "uint256" },
            { internalType: "uint256", name: "validBefore", type: "uint256" },
            { internalType: "bytes32", name: "nonce", type: "bytes32" },
            { internalType: "uint8", name: "v", type: "uint8" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "receiveWithAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "minter", type: "address" }],
          name: "removeMinter",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "contract IERC20", name: "tokenContract", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "rescueERC20",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "rescuer",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          name: "transfer",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          name: "transferFrom",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "validAfter", type: "uint256" },
            { internalType: "uint256", name: "validBefore", type: "uint256" },
            { internalType: "bytes32", name: "nonce", type: "bytes32" },
            { internalType: "bytes", name: "signature", type: "bytes" },
          ],
          name: "transferWithAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
            { internalType: "uint256", name: "validAfter", type: "uint256" },
            { internalType: "uint256", name: "validBefore", type: "uint256" },
            { internalType: "bytes32", name: "nonce", type: "bytes32" },
            { internalType: "uint8", name: "v", type: "uint8" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "transferWithAuthorization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_account", type: "address" }],
          name: "unBlacklist",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        { inputs: [], name: "unpause", outputs: [], stateMutability: "nonpayable", type: "function" },
        {
          inputs: [{ internalType: "address", name: "_newBlacklister", type: "address" }],
          name: "updateBlacklister",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_newMasterMinter", type: "address" }],
          name: "updateMasterMinter",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "_newPauser", type: "address" }],
          name: "updatePauser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newRescuer", type: "address" }],
          name: "updateRescuer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "pure",
          type: "function",
        },
      ],
    },
    WardenManager: {
      address: "0x6625F9ca44ecA82C9A2b61caB58FBfACd24fF1C2",
      abi: [
        {
          inputs: [
            { internalType: "address", name: "_optimisticOracle", type: "address" },
            { internalType: "uint64", name: "_optimisticOracleLiveness", type: "uint64" },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [{ internalType: "address", name: "warden", type: "address" }],
          name: "AssertionPending",
          type: "error",
        },
        { inputs: [], name: "InsufficientStake", type: "error" },
        { inputs: [], name: "MustBeOracle", type: "error" },
        {
          inputs: [{ internalType: "address", name: "warden", type: "address" }],
          name: "WardenAlreadySlashed",
          type: "error",
        },
        {
          inputs: [{ internalType: "address", name: "warden", type: "address" }],
          name: "WardenNotSlashed",
          type: "error",
        },
        {
          inputs: [{ internalType: "address", name: "warden", type: "address" }],
          name: "WardenSlashPending",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { indexed: true, internalType: "address", name: "warden", type: "address" },
            { indexed: true, internalType: "address", name: "caller", type: "address" },
          ],
          name: "AssertionDisputed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { indexed: false, internalType: "bool", name: "assertedTruthfully", type: "bool" },
            { indexed: true, internalType: "address", name: "caller", type: "address" },
          ],
          name: "AssertionResolved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "warden", type: "address" },
            { indexed: false, internalType: "contract IERC20", name: "token", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: true, internalType: "address", name: "caller", type: "address" },
          ],
          name: "SlashExecuted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "warden", type: "address" },
            { indexed: true, internalType: "address", name: "staker", type: "address" },
            { indexed: false, internalType: "contract IERC20", name: "token", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "StakePlaced",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "warden", type: "address" },
            { indexed: true, internalType: "address", name: "staker", type: "address" },
            { indexed: false, internalType: "contract IERC20", name: "token", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "StakeWithdrawn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "warden", type: "address" },
            { indexed: false, internalType: "string", name: "ipfsInfoHash", type: "string" },
            { indexed: false, internalType: "string", name: "nillionKey", type: "string" },
          ],
          name: "WardenRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "warden", type: "address" },
            { indexed: false, internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { indexed: true, internalType: "address", name: "caller", type: "address" },
          ],
          name: "WardenSlashed",
          type: "event",
        },
        {
          inputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          name: "assertionDisputedCallback",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          name: "assertionIdToWarden",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { internalType: "bool", name: "assertedTruthfully", type: "bool" },
          ],
          name: "assertionResolvedCallback",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "warden", type: "address" },
            { internalType: "contract IERC20", name: "token", type: "address" },
          ],
          name: "executeSlash",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "warden", type: "address" },
            { internalType: "address", name: "user", type: "address" },
            { internalType: "contract IERC20", name: "token", type: "address" },
          ],
          name: "getUserStakeOnWarden",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "warden", type: "address" }],
          name: "getWardenInfo",
          outputs: [
            { internalType: "string", name: "ipfsInfoHash", type: "string" },
            { internalType: "string", name: "nillionKey", type: "string" },
            { internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { internalType: "bool", name: "isSlashed", type: "bool" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "warden", type: "address" },
            { internalType: "contract IERC20", name: "token", type: "address" },
          ],
          name: "getWardenStakeInToken",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "optimisticOracle",
          outputs: [{ internalType: "contract ExtendedOptimisticOracleV3Interface", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "optimisticOracleLiveness",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "string", name: "wardenIpfsInfoHash", type: "string" },
            { internalType: "string", name: "wardenNillionKey", type: "string" },
          ],
          name: "registerWarden",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "warden", type: "address" }],
          name: "slashWarden",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "warden", type: "address" },
            { internalType: "contract IERC20", name: "token", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "stakeOnWarden",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "", type: "address" }],
          name: "wardens",
          outputs: [
            { internalType: "string", name: "ipfsInfoHash", type: "string" },
            { internalType: "string", name: "nillionKey", type: "string" },
            { internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { internalType: "bool", name: "isSlashed", type: "bool" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "warden", type: "address" },
            { internalType: "contract IERC20", name: "token", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "withdrawStake",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
    CryptManager: {
      address: "0x27639764f1e1ac3124913f366fB827de7e457EC7",
      abi: [
        {
          inputs: [
            { internalType: "address", name: "_optimisticOracle", type: "address" },
            { internalType: "uint64", name: "_optimisticOracleLiveness", type: "uint64" },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [{ internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "CryptAlreadyDecrypting",
          type: "error",
        },
        {
          inputs: [{ internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "CryptAlreadyFinalized",
          type: "error",
        },
        {
          inputs: [{ internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "CryptIdNotFound",
          type: "error",
        },
        {
          inputs: [{ internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "CryptNotFinalized",
          type: "error",
        },
        { inputs: [{ internalType: "address", name: "caller", type: "address" }], name: "OnlyOracle", type: "error" },
        {
          inputs: [
            { internalType: "uint256", name: "cryptId", type: "uint256" },
            { internalType: "address", name: "caller", type: "address" },
          ],
          name: "OnlyOwner",
          type: "error",
        },
        {
          inputs: [
            { internalType: "uint256", name: "cryptId", type: "uint256" },
            { internalType: "address", name: "caller", type: "address" },
          ],
          name: "OnlyWarden",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint256", name: "cryptId", type: "uint256" },
            { indexed: false, internalType: "string", name: "ipfsDataHash", type: "string" },
            { indexed: false, internalType: "string", name: "nillionCrypt", type: "string" },
            { indexed: false, internalType: "address", name: "decryptCallback", type: "address" },
            { indexed: true, internalType: "address", name: "warden", type: "address" },
            { indexed: true, internalType: "address", name: "owner", type: "address" },
          ],
          name: "CryptCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "CryptDeleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint256", name: "cryptId", type: "uint256" },
            { indexed: false, internalType: "bool", name: "result", type: "bool" },
          ],
          name: "DecryptFinalized",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint256", name: "cryptId", type: "uint256" },
            { indexed: false, internalType: "bytes", name: "decryptTrigger", type: "bytes" },
          ],
          name: "DecryptInitiated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "uint256", name: "cryptId", type: "uint256" },
            { indexed: false, internalType: "string", name: "decryptionKey", type: "string" },
          ],
          name: "DecryptionKeySet",
          type: "event",
        },
        {
          inputs: [{ internalType: "bytes32", name: "assertionId", type: "bytes32" }],
          name: "assertionDisputedCallback",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          name: "assertionIdToCryptId",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { internalType: "bool", name: "assertedTruthfully", type: "bool" },
          ],
          name: "assertionResolvedCallback",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "string", name: "ipfsDataHash", type: "string" },
            { internalType: "bytes", name: "decryptTrigger", type: "bytes" },
            { internalType: "string", name: "nillionCrypt", type: "string" },
            { internalType: "address", name: "warden", type: "address" },
            { internalType: "address", name: "decryptCallback", type: "address" },
          ],
          name: "createCrypt",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          name: "crypts",
          outputs: [
            { internalType: "string", name: "ipfsDataHash", type: "string" },
            { internalType: "bytes", name: "decryptTrigger", type: "bytes" },
            { internalType: "string", name: "nillionCrypt", type: "string" },
            { internalType: "string", name: "decryptionKey", type: "string" },
            { internalType: "address", name: "warden", type: "address" },
            { internalType: "address", name: "decryptCallback", type: "address" },
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "bytes32", name: "assertionId", type: "bytes32" },
            { internalType: "bool", name: "isFinalized", type: "bool" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "deleteCrypt",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "getCrypt",
          outputs: [
            {
              components: [
                { internalType: "string", name: "ipfsDataHash", type: "string" },
                { internalType: "bytes", name: "decryptTrigger", type: "bytes" },
                { internalType: "string", name: "nillionCrypt", type: "string" },
                { internalType: "string", name: "decryptionKey", type: "string" },
                { internalType: "address", name: "warden", type: "address" },
                { internalType: "address", name: "decryptCallback", type: "address" },
                { internalType: "address", name: "owner", type: "address" },
                { internalType: "bytes32", name: "assertionId", type: "bytes32" },
                { internalType: "bool", name: "isFinalized", type: "bool" },
              ],
              internalType: "struct CryptManager.Crypt",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCrypts",
          outputs: [
            {
              components: [
                { internalType: "string", name: "ipfsDataHash", type: "string" },
                { internalType: "bytes", name: "decryptTrigger", type: "bytes" },
                { internalType: "string", name: "nillionCrypt", type: "string" },
                { internalType: "string", name: "decryptionKey", type: "string" },
                { internalType: "address", name: "warden", type: "address" },
                { internalType: "address", name: "decryptCallback", type: "address" },
                { internalType: "address", name: "owner", type: "address" },
                { internalType: "bytes32", name: "assertionId", type: "bytes32" },
                { internalType: "bool", name: "isFinalized", type: "bool" },
              ],
              internalType: "struct CryptManager.Crypt[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "cryptId", type: "uint256" }],
          name: "initiateDecrypt",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "optimisticOracle",
          outputs: [{ internalType: "contract ExtendedOptimisticOracleV3Interface", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "optimisticOracleLiveness",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint256", name: "cryptId", type: "uint256" },
            { internalType: "string", name: "decryptionKey", type: "string" },
          ],
          name: "setDecryptionKey",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
  },
} as const;

export default externalContracts;
